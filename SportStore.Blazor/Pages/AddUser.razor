@page "/addUser"
@using SportStore.Application.Requests


@inject IMediator Mediator

<PageTitle> Добавление пользователя </PageTitle>

<h3 class="mt-4 mb-5"> Создание нового пользователя  </h3>


@if (_submitSuccessful)
{
    <div class="alert alert-success" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
             fill="currentColor" class="bi bi-check-circle-fill" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z" />
        </svg>
        Your trail has been submitted successfully!
    </div>
}
else if (_errorMessage is not null)
{
    <div class="alert alert-danger" role="alert">
        <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18"
             fill="currentColor" class="bi bi-x-circle-fill" viewBox="0 0 16 16">
            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1 0-.708.708L7.293 8l-2.647 2.646a.5.5 0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0 .708-.708L8.707 8l2.647-2.646a.5.5 0 0 0-.708-.708L8 7.293 5.354 4.646z" />
        </svg>
        @_errorMessage
    </div>
}


<EditForm Model="user" OnValidSubmit="SubmitForm">

    <ValidationSummary />
    <FluentValidationValidator />


    <FormSection Title="Basic Details" HelpText="This information is used to identify the trail and can be searched to help hikers find it.">
        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    <label for="userName" class="font-weight-bold text-secondary">Name</label>
                    <InputText @bind-Value="user.Name" class="form-control" id="userName" />
                    <ValidationMessage For="@(() => user.Name)" />


                </div>
            </div>
        </div>
        <div class="row">
            <div class="col">
                <div class="form-group">
                    <label for="userLogin" class="font-weight-bold text-secondary">Description</label>
                    <InputTextArea @bind-Value="user.Login" rows="6" class="form-control" id="userLogin" />
                    <ValidationMessage For="@(() => user.Login)" />
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-6">
                <div class="form-group">
                    <label for="password" class="font-weight-bold text-secondary">Location</label>
                    <InputText @bind-Value="user.Password" class="form-control" id="password" />
                    <ValidationMessage For="@(() => user.Password)" />
                </div>
            </div>
        </div>
    </FormSection>
    <FormSection Title="Difficulty" HelpText="Help other hikers out by telling them the length of the trail is how long it might take them.">

        <div class="row">
            <div class="col-3">
                <div class="form-group">
                    <label for="surname" class="font-weight-bold text-secondary">Length (km)</label>
                    <InputText @bind-Value="user.Surname" class="form-control" id="surname" />
                    <ValidationMessage For="@(() => user.Surname)" />
                </div>
            </div>
        </div>

    </FormSection>
    <FormSection Title="Items"
                 HelpText="Route instructions are a guide for the trail.This helps hikers new to the trail stay on track.">
        @{
            var i = 0;
        }
        @foreach (var item in user.Items)
        {
            i++;
            item.Number = i;
            <div class="row">
                <div class="col-2">
                    <div class="form-group">
                        <label class="font-weight-bold text-secondary">Number</label>
                        <p>@item.Number</p>
                    </div>
                </div>
                <div class="col">
                    <div class="form-group">

                        <label for="itemTitle" class="font-weight-bold text-secondary">Title</label>
                        <InputText @bind-Value="item.Title"
                                   class="form-control"
                                   id="itemTitle" />
                        <ValidationMessage For="@(() => item.Title)" />
                    </div>
                </div>
                <div class="col-1 d-flex mt-3">
                    <button @onclick="@(() => user.Items.Remove(item))"
                            class="btn btn-link" type="button">

                        <svg width="1em" height="1em" viewBox="0 0 16 16"
                             class="bi bi-x-circle-fill text-danger"
                             fill="currentColor"
                             xmlns="http://www.w3.org/2000/svg">

                            <path fill-rule="evenodd" d="M16 8A8 8 0 1 1 0
                             8a8 8 0 0 1 16 0zM5.354 4.646a.5.5 0 1
                             0-.708.708L7.293 8l-2.647 2.646a.5.5
                            0 0 0 .708.708L8 8.707l2.646 2.647a.5.5 0 0 0
                            .708-.708L8.707 8l2.647-2.646a.5.5 0 0
                            0-.708-.708L8 7.293 5.354 4.646z" />
                        </svg>
                    </button>
                </div>
            </div>
        }
        <div class="row">
            <div class="col">
                <button class="btn btn-outline-primary"
                        type="button"
                        @onclick="@(() => user.Items.Add(new Item()))">
                    Add Item

                </button>
                <ValidationMessage For="@(() => user.Items )" />
            </div>
        </div>
    </FormSection>

    <div class="mt-4 mb-5">
        <div class="row">
            <div class="offset-4 col-8 text-right">
                <button class="btn btn-outline-secondary"
                        type="button"
                        @onclick="@(() => user = new User())">
                    Reset
                </button>
                <button class="btn btn-primary"
                        type="submit">
                    Отправить
                </button>
            </div>
        </div>
    </div>


</EditForm>


@code {

    public User user = new();
    private bool _submitSuccessful;
    private string? _errorMessage;


    public async Task SubmitForm(){
       Console.WriteLine("Отправка формы!");

        var response = await Mediator.Send(new AddUserRequest(user));
        if (response.userId == -1)
        {
            _errorMessage = "There was a problem saving your trail.";
            _submitSuccessful = false;
            return;
        }

         user = new();
        _errorMessage = null;
        _submitSuccessful = true;

    }

}
