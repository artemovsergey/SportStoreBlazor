@page "/HomeGeneric"



@using SportStore.Application.Requests
@inject IMediator mediatr
@inject NavigationManager NavManager

<UserDetail User="_selectedUser" />

<ViewSwitcherGeneric Items="Users" Context="user">

    <GridTemplate>
        <UserCard u="user" OnSelected="HandleUserSelected" />
    </GridTemplate>

    <HeaderTemplate>
        <th>Name</th>
        <th>Location</th>
        <th>Length</th>
        <th>Time</th>
        <th></th>
    </HeaderTemplate>

    <RowTemplate>
        <th scope="col"> @user.Name</th>
        <td>@user.Surname</td>
        <td>@(user.Patronymic)km</td>
        <td>@user.Login</td>
        <td class="text-right">
            <button @onclick="@(() => HandleUserSelected(user))" title="View" class="btn btn-primary">
                <i class="bi bi-binoculars"></i>
            </button>
            <button @onclick="@(() => NavManager.NavigateTo($"/edit-User/{user.Id}"))" title="Edit" class="btn btn-outline-secondary">
                <i class="bi bi-pencil"></i>
            </button>
        </td>
    </RowTemplate>

</ViewSwitcherGeneric>

@code {
    IEnumerable<User> Users = new List<User>();
    private User? _selectedUser;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            //Users = await http.GetFromJsonAsync<IEnumerable<User>>($"{http.BaseAddress}api/Users");
            var response = await mediatr.Send(new GetUsersRequest());
            Users = response.Users;
        }
        catch (HttpRequestException ex)
        {
            Console.WriteLine($"There was a problem loading User data: {ex.Message}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"{ex.InnerException.Message}");
        }
    }

    private void HandleUserSelected(User user)
    {
        _selectedUser = user;
        StateHasChanged();
    }
}                